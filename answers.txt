question 1.

leftmost derivation: 
1. Start with Statement:
Statement -> Assignment 

2. Expand Assignment:
Assignment -> Identifier = Expression 
A = Expression 

3. Expand Expression: 
A = Term * Factor 

4. Expand Term on the right side 
A = B * Factor 

5. Expand Factor: 
A = B * (Expression)

6. Expand Expression inside parentheses 
A = B * (Term * Factor)

7.Expand Term in parentheses 
A = B * (C * Factor)

8. Expand Facttor in parantheses 
A = B * (C * (Expression))

9. Expand Expression inside paranthesis 
A = B * (C * (Expression + Term))

10. Expand Expression inside paranthesis 
A = B * (C * (A + Term))

11. Expand Term 
A = B * (C * (A + B))

Parse Tree: 

         Statement
              |
          Assignment
       __________|__________
      |                     |
  Identifier             Expression
      |                        |
      A                     Term * Factor
                            |         |
                            Term * Factor
                           |     |    |
                      Factor  *  (Expression)
                         |           |
                         B         Term * Factor
                                   |         |
                                Factor  * (Expression)
                                 |                 |
                                 C    Expression + Term
                                      |             |
                                      Identifier  Term
                                         |          |
                                         A          B



question 2
a. The answer would be 180 because, u variable is accessed based on its location in the code. The final print does output the value of u 
which is calculated to be 180. 

b. The answer would also be 180 because when foo is called it creates a local v which is set to 42 but the add function accesses the global value
which is 69. which means u = 69 + 42 + 69 which makes it 180 

c. The answer would be 101 because foo(42, 13) is called: Inside foo, v := 42 (local v), shadowing the global v. Then bar(add) is called. Then it creates u= 17. 
Then add(42). u := 42 (local v from foo) + 17 (local u from bar) + 42 (z) = 101

